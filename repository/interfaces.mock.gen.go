// Code generated by MockGen. DO NOT EDIT.
// Source: repository/interfaces.go
//
// Generated by this command:
//
//	mockgen -source=repository/interfaces.go -destination=repository/interfaces.mock.gen.go -package=repository
//

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRepositoryInterface is a mock of RepositoryInterface interface.
type MockRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryInterfaceMockRecorder
}

// MockRepositoryInterfaceMockRecorder is the mock recorder for MockRepositoryInterface.
type MockRepositoryInterfaceMockRecorder struct {
	mock *MockRepositoryInterface
}

// NewMockRepositoryInterface creates a new mock instance.
func NewMockRepositoryInterface(ctrl *gomock.Controller) *MockRepositoryInterface {
	mock := &MockRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryInterface) EXPECT() *MockRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetDronePlanByEstateId mocks base method.
func (m *MockRepositoryInterface) GetDronePlanByEstateId(ctx context.Context, id string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDronePlanByEstateId", ctx, id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDronePlanByEstateId indicates an expected call of GetDronePlanByEstateId.
func (mr *MockRepositoryInterfaceMockRecorder) GetDronePlanByEstateId(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDronePlanByEstateId", reflect.TypeOf((*MockRepositoryInterface)(nil).GetDronePlanByEstateId), ctx, id)
}

// GetEstateById mocks base method.
func (m *MockRepositoryInterface) GetEstateById(ctx context.Context, id string) (GetEstateByIdOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateById", ctx, id)
	ret0, _ := ret[0].(GetEstateByIdOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateById indicates an expected call of GetEstateById.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstateById(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateById", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstateById), ctx, id)
}

// GetEstateStats mocks base method.
func (m *MockRepositoryInterface) GetEstateStats(ctx context.Context, id string) (GetEstateStatsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateStats", ctx, id)
	ret0, _ := ret[0].(GetEstateStatsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateStats indicates an expected call of GetEstateStats.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstateStats(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateStats", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstateStats), ctx, id)
}

// InsertEstate mocks base method.
func (m *MockRepositoryInterface) InsertEstate(ctx context.Context, input InsertEstateInput) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertEstate", ctx, input)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertEstate indicates an expected call of InsertEstate.
func (mr *MockRepositoryInterfaceMockRecorder) InsertEstate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertEstate", reflect.TypeOf((*MockRepositoryInterface)(nil).InsertEstate), ctx, input)
}

// InsertEstateObject mocks base method.
func (m *MockRepositoryInterface) InsertEstateObject(ctx context.Context, estateId string, input InsertEstateObjectInput) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertEstateObject", ctx, estateId, input)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertEstateObject indicates an expected call of InsertEstateObject.
func (mr *MockRepositoryInterfaceMockRecorder) InsertEstateObject(ctx, estateId, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertEstateObject", reflect.TypeOf((*MockRepositoryInterface)(nil).InsertEstateObject), ctx, estateId, input)
}
