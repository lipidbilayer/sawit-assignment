# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /estate:
    post:
      summary: Insert a new estate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                length:
                  type: integer
                  minimum: 1
                  maximum: 50000
                width:
                  type: integer
                  minimum: 1
                  maximum: 50000
              required:
                - length
                - width
      responses:
        '200':
          description: Created
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UuidResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseApi'
  '/estate/{id}/tree':
    post:
      summary: Store tree data in a given estate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the estate where the tree is to be stored
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                x:
                  type: integer
                  minimum: 1
                  maximum: 50000
                y:
                  type: integer
                  minimum: 1
                  maximum: 50000
                height:
                  type: integer
                  minimum: 1
                  maximum: 30
              required:
                - x
                - y
                - height
      responses:
        '201':
          description: Created
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UuidResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseApi'
  '/estate/{id}/stats':
    get:
      summary: Get stats of trees in a given estate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the estate to get statistics for
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseApi'
  '/estate/{id}/drone-plan':
    get:
      summary: Get drone flight plan for a given estate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the estate to plan drone flight for
          schema:
            type: string
        - in: query
          name: max_distance
          schema:
            type: integer
            minimum: 0
            description: Maximum sum of vertical and horizontal distance the drone can travel, in meters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DronePlanResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseApi'
components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Hello, World!
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponseApi:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    UuidResponse:
      type: object
      properties:
        id:
          type: string
    StatsResponse:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
        max:
          type: integer
          minimum: 0
        min:
          type: integer
          minimum: 0
        median:
          type: integer
          minimum: 0
    DronePlanResponse:
      type: object
      properties:
        distance:
          type: integer
          minimum: 0
          description: Total distance traveled by the drone
        rest:
          type: object
          properties:
            x:
              type: integer
              minimum: 0
              description: X-coordinate of the location where the drone will first land
            y:
              type: integer
              minimum: 0
              description: Y-coordinate of the location where the drone will first land